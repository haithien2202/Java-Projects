#BlueJ class context
comment0.target=EarthquakeSorter
comment0.text=\r\n\ EarthquakeSorter\r\n\ Sorts\ data\ about\ a\ collection\ of\ 4335\ NZ\ earthquakes\ from\ May\ 2016\ to\ May\ 2017\r\n\ Each\ line\ of\ the\ file\ "earthquake-data.txt"\ has\ a\ description\ of\ one\ earthquake\:\r\n\ \ \ ID\ time\ longitude\ latitude\ magnitude\ depth\ region\r\n\ Data\ is\ from\ http\://quakesearch.geonet.org.nz/\r\n\ \ Note\ the\ earthquakes'\ ID\ have\ been\ modified\ to\ suit\ this\ assignment.\r\n\ \ Note\ bigearthquake-data.txt\ has\ just\ the\ 421\ earthquakes\ of\ magnitude\ 4.0\ and\ above\r\n\ \ \ which\ may\ be\ useful\ for\ testing,\ since\ it\ is\ not\ as\ big\ as\ the\ full\ file.\r\n\ \r\n\ Core\:\ \ three\ methods\:\r\n\ \ \ loadData\r\n\ \ \ \ \ \ Loads\ the\ data\ from\ a\ file\ into\ a\ field\ containing\ an\r\n\ \ \ \ \ \ ArrayList\ of\ Earthquake\ objects.\r\n\ \ \ \ \ \ Hint\ \:\ to\ make\ an\ Earthquake\ object,\ read\ all\ the\ lines\ from\ the\ file\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ and\ then\ take\ each\ line\ apart\ into\ the\ values\ to\ pass\ to\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Earthquake\ constructor\r\n\ \ \ sortByID\r\n\ \ \ \ \ \ Sorts\ the\ list\ of\ earthquakes\ using\ their\ natural\ ordering\ (based\ on\ their\ ID\ number).\r\n\ \ \ sortByTime\r\n\ \ \ \ \ \ Sorts\ the\ list\ of\ earthquakes\ according\ to\ the\ date\ and\ time\ that\ they\ occurred.\r\n\ \ \ \r\n\ Completion\:\ two\ methods\:\r\n\ \ \ sortByRegion\r\n\ \ \ \ \ \ Sorts\ the\ list\ of\ earthquakes\ according\ to\ region.\ If\ two\ earthquakes\ have\ the\ same\r\n\ \ \ \ \ \ region,\ they\ should\ be\ sorted\ by\ magnitude\ and\ then\ depth.\r\n\ \ \ sortByProximity\r\n\ \ \ \ \ \ Sorts\ the\ list\ of\ earthquakes\ according\ to\ their\ proximity\ (distance)\ to\ a\ given\ location.\r\n\ \ \ \r\n\ Challenge\:\ one\ method\r\n\ \ \ sortByProximityChallenge\r\n\ \ \ \ \ \ Sorts\ the\ list\ of\ earthquakes\ according\ to\ their\ distance\ to\ a\ given\ location\ first,\r\n\ \ \ \ \ \ but\ sorts\ the\ earthquakes\ with\ a\ 1\ km\ radius\ of\ each\ other\ according\ to\ magnitude\ and\ depth.\r\n
comment1.params=filename
comment1.target=void\ loadData(java.lang.String)
comment1.text=\r\n\ Load\ data\ from\ the\ data\ file\ into\ the\ earthquakes\ field\:\r\n\ Clear\ the\ earthquakes\ field.\r\n\ Read\ lines\ from\ file\r\n\ For\ each\ line,\ use\ Scanner\ to\ break\ up\ each\ line\ and\ make\ an\ Earthquake\r\n\ \ adding\ it\ to\ the\ earthquakes\ field.\r\n
comment10.params=
comment10.target=void\ sortByProximity()
comment11.params=
comment11.target=void\ sortByProximityChallenge()
comment12.params=filename
comment12.target=java.util.List\ getEarthquakes(java.lang.String)
comment13.params=eq
comment13.target=java.util.List\ checkSortByID(java.util.List)
comment14.params=eq
comment14.target=java.util.List\ checkSortByTime(java.util.List)
comment15.params=eq
comment15.target=java.util.List\ checkSortByRegion(java.util.List)
comment16.params=eq\ lat\ longi
comment16.target=java.util.List\ checkSortByProximity(java.util.List,\ double,\ double)
comment17.params=eq\ lat\ longi
comment17.target=java.util.List\ checkSortByProximityChallenge(java.util.List,\ double,\ double)
comment2.params=
comment2.target=void\ sortByID()
comment2.text=\r\n\ Sorts\ the\ earthquakes\ by\ ID\r\n\ The\ file\ "output-ID.txt"\ lists\ the\ output\ for\ the\ "bigearthquake-data.txt"\r\n
comment3.params=
comment3.target=void\ sortByTime()
comment3.text=\r\n\ Sorts\ the\ list\ of\ earthquakes\ according\ to\ the\ date\ and\ time\ that\ they\ occurred.\r\n\ The\ file\ "output-Time.txt"\ lists\ the\ output\ for\ the\ "bigearthquake-data.txt"\r\n
comment4.params=
comment4.target=void\ sortByRegion()
comment4.text=\r\n\ Sorts\ the\ list\ of\ earthquakes\ according\ to\ region.\ If\ two\ earthquakes\ have\ the\ same\r\n\ \ \ region,\ they\ should\ be\ sorted\ by\ magnitude\ (highest\ first)\ and\ then\ depth\ (more\ shallow\ first)\r\n\ The\ file\ "output-Region.txt"\ lists\ the\ output\ for\ the\ "bigearthquake-data.txt"\r\n
comment5.params=latitude\ longitude
comment5.target=void\ sortByProximity(double,\ double)
comment5.text=\r\n\ Sorts\ the\ list\ of\ earthquakes\ according\ to\ their\ proximity\ (distance)\ to\ a\ given\ location.\r\n\ \ \ Auckland\:\ -36.8485,\ 174.7633\r\n\ \ \ Wellington\:\ -41.2865,\ 174.7762\r\n\ \ \ Christchurch\:\ -43.5321,\ 172.6362\r\n\ \ \ Queenstown\:\ -45.0312,\ 168.6626\r\n\ \ \ Dunedin\ -45.8788,\ 170.5028\r\n\ \ \ Invercargill\:\ -46.4132,\ 168.3538\r\n\ The\ file\ "output-Proximity-Completion-ChCh.txt"\ lists\ the\ output\ for\ the\ \r\n\ \ \ \ \ "bigearthquake-data.txt"\ for\ Christchurch\r\n\ The\ latitude\ and\ longitude\ of\ Christchurch\ are\ stored\ in\ chch.txt\r\n
comment6.params=latitude\ longitude
comment6.target=void\ sortByProximityChallenge(double,\ double)
comment6.text=\r\n\ Sorts\ the\ list\ of\ earthquakes\ according\ to\ their\ distance\ to\ a\ given\ location\ first,\r\n\ but\ sorts\ the\ earthquakes\ with\ a\ 1\ km\ radius\ of\ each\ other\ according\ to\ magnitude\r\n\ (highest\ first)\ and\ depth\ (more\ shaloow\ first).\r\n\ \ \ Auckland\:\ -36.8485,\ 174.7633\r\n\ \ \ Wellington\:\ -41.2865,\ 174.7762\r\n\ \ \ Christchurch\:\ -43.5321,\ 172.6362\r\n\ \ \ Queenstown\:\ -45.0312,\ 168.6626\r\n\ \ \ Dunedin\ -45.8788,\ 170.5028\r\n\ \ \ Invercargill\:\ -46.4132,\ 168.3538\r\n\r\n\ The\ file\ "output-Proximity-Challenge-ChCh.txt"\ lists\ the\ output\ for\ the\ \r\n\ \ \ \ \ "bigearthquake-data.txt"\ for\ Christchurch\r\n\ The\ latitude\ and\ longitude\ of\ Christchurch\ are\ stored\ in\ chch.txt\r\n
comment7.params=
comment7.target=void\ setupGUI()
comment7.text=\r\n\ Add\ the\ buttons\r\n
comment8.params=arguments
comment8.target=void\ main(java.lang.String[])
comment9.params=
comment9.target=void\ loadData()
numComments=18
